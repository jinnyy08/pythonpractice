#Source: Codecademy Course (Learn Python 3) - Python Code Challenges: Loops (Advanced)

#Question 5 - Reversed List

#For the final challenge, we are going to test two lists to see if the second list is the reverse of the first list.
#There are a few different ways to approach this, but we are going to try a method that iterates through each of the values in one direction for the first list
#and compares them against the values starting from the other direction in the second list.
#Here is what you need to do:

  #1. Define a function that has two input parameters for our lists
  #2. Loop through every index in one of the lists from beginning to end
  #3. Within the loop, compare the element in the first list at the current index against the element 
     # at the second listâ€™s last index minus the current index. If there was a mismatch, then the lists arenâ€™t reversed and we can return False
  #4. If the loop ended successfully, then we know the lists are reversed and we can return True.



#Coding Question

#Create a function named reversed_list() that takes two lists of the same size as parameters named lst1 and lst2.
#The function should return True if lst1 is the same as lst2 reversed. The function should return False otherwise.
#For example, reversed_list([1, 2, 3], [3, 2, 1]) should return True.


#My work

#Comments !!!
#Loop through EVERY INDEX - should involve 'for i in range(len(lst1))
#checking into lst2 - the second list, with the OPPOSITE index
  #lst1[ind]= lst2[ len(lst1) - ind - 1] #SHOULD (-1), since the index starts with 0 - using len() does NOT count ONE index of 0, so subtract ONE more!!


def reversed_list(lst1, lst2):

  for i in range(len(lst1)):
    if lst1[i] != lst2[(len(lst1)- i - 1)]:
      return False #include False INSIDE -- for the case of when 1st and the opposite indiex does NOT match => use != in
  return True
